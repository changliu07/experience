From then on, when anything went wrong with a computer, we said it had bugs in it.
If it's a good idea, go ahead and do it. It's much easier to apologize than it is to get permission.
It is often easier to ask for forgiveness than to ask for permission.
The most dangerous phrase in the language is, "We have always done it this way."
Humans are allergic to change. They love to say, "We have always done it this way." I try to fight that. That's why I have a clock on my wall that runs counter-clockwise.
A ship in port is safe, but that is not what ships are for. Sail out to sea and do new things.
You don't manage people, you manage things. You lead people.
Leadership is a two-way street, loyalty up and loyalty down. Respect for one's superiors; care for one's crew.
One accurate measurement is worth a thousand expert opinions.
I have always objected to doing anything over again if I had already done it once. 
Some day, on the corporate balance sheet, there will be an entry which reads, "Information"; for in most cases, the information is more valuable than the hardware which processes it.
We are flooding people with information. We need to feed it through a processor. A human must turn information into intelligence or knowledge. We have tended to forget that no computer will ever ask a new question.
There sat that beautiful big machine whose sole job was to copy things and do addition. Why not make the computer do it? That's why I sat down and wrote the first compiler. It was very stupid. What I did was watch myself put together a program and make the computer do what I did. 
To me programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge.
They told me computers could only do arithmetic.
In pioneer days they used oxen for heavy pulling, and when one ox couldn't budge a log, they didn't try to grow a larger ox. We shouldn't be trying for bigger computers, but for more systems of computers.
